Часть 1. Создать иерархию классов для геометрических фигур.
Для них нужно создать интерфейс Shape, в котором определены методы:
double getWidth()
double getHeight()
double getArea()
double getPerimeter()
Все фигуры должны реализовывать этот интерфейс и правильным образом определять данные методы
1.	Square – квадрат
Должен иметь конструктор, принимающий длину стороны
2.	Triangle – треугольник
Должен иметь конструктор, принимающий x1, y1, x2, y2, x3, y3 – шесть координат.
В качестве ширины возвращать max(x1, x2, x3) – min(x1, x2, x3)
В качестве высоты возвращать max(y1, y2, y3) – min(y1, y2, y3)
3.	Rectangle – прямоугольник
Должен иметь конструктор, принимающий длины двух сторон
4.	Circle – окружность
Должна иметь конструктор, принимающий радиус. В качестве ширины и высоты должен выдаваться диаметр

Часть 2. В main в коде объявить список фигур, чтобы в нём было около 5-10 разных фигур.
Задача – написать функцию, которая находит фигуру с максимальной площадью. Вызвать её для этого списка и распечатать информацию о фигуре в консоль.
Аналогично найдите фигуру со вторым по величине периметром.
Поиск фигур реализовать через стандартный метод Arrays.sort с компаратором. Что такое компаратор почитайте сами, но если будут вопросы, задавайте.

Часть 3. Переопределите в фигурах методы toString, hashCode, equals
Чему научитесь:
•	Интерфейсы, реализация интерфейса
•	Виртуальные функции  – как они работают и применяются
•	Реализация toString, hashCode, equals
•	Применение стандартной сортировки, компараторы, реализация интерфейсов
