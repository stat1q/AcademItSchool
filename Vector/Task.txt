Задача 2. Вектор
Лекции, нужные для решения задачи: 1-6.
Реализовать класс Vector для векторов вещественных чисел размерности n. Компоненты вектора хранить массивом. Номера компонент отсчитываются от нуля
Конструктор вектора должен принимать число n – размерность вектора. Если n <= 0, то нужно бросать исключение IllegalArgumentException
Для этого класса нужно реализовать:
1.	Конструкторы
a.	Vector(n) – размерность n, все компоненты равны 0
b.	Vector(Vector) – конструктор копирования
c.	Vector(double[]) – заполнение вектора значениями из массива
d.	Vector(n, double[]) – заполнение вектора значениями из массива. Если длина массива меньше n, то считать что в остальных компонентах 0
2.	Метод getSize() для получения размерности вектора
3.	Реализовать метод toString(), чтобы выдавал информацию о векторе в  формате { значения компонент через запятую }
Например, { 1, 2, 3 }
4.	Реализовать  нестатические методы:
a.	Прибавление к вектору другого вектора
b.	Вычитание из вектора другого вектора
c.	Умножение вектора на скаляр
d.	Разворот вектора (умножение всех компонент на -1)
e.	Получение длины вектора
f.	Получение и установка компоненты вектора по индексу
g.	Переопределить метод equals, чтобы был true  векторы имеют одинаковую размерность и соответствующие компоненты равны.
Соответственно, переопределить hashCode
5.	Реализовать статические методы:
a.	Сложение двух векторов – должен создаваться новый вектор
b.	Вычитание векторов – должен создаваться новый вектор
c.	Скалярное произведение векторов
Если операции выполняются над векторами разной размерности, то считать что у меньшего вектора в недостающих компонентах нули
В main написать небольшую тестовую программу
Чему научитесь:
•	Реализация достаточно сложного класса с многими операциями
•	Тестирование за собой
•	Поймете, что методы зачастую независимы друг от друга, и их можно писать и проверять по-отдельности.
    Но в некоторых случаях методы должны быть согласованы между собой
•	Начальные навыки работы с исключениями
•	Часто надежнее делать копию данных, чтобы не было неожиданностей со ссылочными типами
